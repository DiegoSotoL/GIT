"use strict";
/**
 * Created by Johnson on 2017-04-02.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.roundToDec = exports.clamp = exports.unwrapRad = exports.rad = exports.deg = void 0;
// noinspection JSUnusedGlobalSymbols
/**
 * Convert radians to degrees
 * @param radian
 * @returns {number}
 */
function deg(radian) {
    return 180 * radian / Math.PI;
}
exports.deg = deg;
// noinspection JSUnusedGlobalSymbols
/**
 * Convert degrees to radians
 * @param degree
 * @returns {number}
 */
function rad(degree) {
    return degree * Math.PI / 180;
}
exports.rad = rad;
// noinspection JSUnusedGlobalSymbols
/**
 * Unwrap a radian to its equivalent form between [-PI, PI]
 * @param rad
 */
function unwrapRad(rad) {
    while (rad > Math.PI) {
        rad -= 2 * Math.PI;
    }
    while (rad < -Math.PI) {
        rad += 2 * Math.PI;
    }
    return rad;
}
exports.unwrapRad = unwrapRad;
// noinspection JSUnusedGlobalSymbols
/**
 * Clamp a number between a minimum and maximum value
 * @param {number} num
 * @param {number} min
 * @param {number} max
 * @returns {number} Clamped number
 */
function clamp(num, min, max) {
    return num < min ? min : num > max ? max : num;
}
exports.clamp = clamp;
/**
 * Round a number to a fixed number of decimals
 * @param {number} num Number to round
 * @param {number} numDecimals Number of decimals
 * @returns {number}
 */
function roundToDec(num, numDecimals) {
    return parseFloat(num.toFixed(numDecimals));
}
exports.roundToDec = roundToDec;
//# sourceMappingURL=numeric.js.map